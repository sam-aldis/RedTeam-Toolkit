{"id":"../node_modules/marked-ts/dist/inline-lexer.js","dependencies":[{"name":"/home/sam/Projects/RedTeamToolkit/src/package.json","includedInParent":true,"mtime":1572423157857},{"name":"/home/sam/Projects/RedTeamToolkit/src/node_modules/marked-ts/package.json","includedInParent":true,"mtime":1572380758975},{"name":"./extend-regexp","loc":{"line":20,"column":30},"parent":"/home/sam/Projects/RedTeamToolkit/src/node_modules/marked-ts/dist/inline-lexer.js","resolved":"/home/sam/Projects/RedTeamToolkit/src/node_modules/marked-ts/dist/extend-regexp.js"},{"name":"./marked","loc":{"line":21,"column":23},"parent":"/home/sam/Projects/RedTeamToolkit/src/node_modules/marked-ts/dist/inline-lexer.js","resolved":"/home/sam/Projects/RedTeamToolkit/src/node_modules/marked-ts/dist/marked.js"},{"name":"./renderer","loc":{"line":22,"column":25},"parent":"/home/sam/Projects/RedTeamToolkit/src/node_modules/marked-ts/dist/inline-lexer.js","resolved":"/home/sam/Projects/RedTeamToolkit/src/node_modules/marked-ts/dist/renderer.js"}],"generated":{"js":"\"use strict\";\n/**\n * @license\n *\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n *\n * Copyright (c) 2018, Костя Третяк. (MIT Licensed)\n * https://github.com/KostyaTretyak/marked-ts\n */\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar extend_regexp_1 = require(\"./extend-regexp\");\nvar marked_1 = require(\"./marked\");\nvar renderer_1 = require(\"./renderer\");\n/**\n * Inline Lexer & Compiler.\n */\nvar InlineLexer = /** @class */ (function () {\n    function InlineLexer(staticThis, links, options, renderer) {\n        if (options === void 0) { options = marked_1.Marked.options; }\n        this.staticThis = staticThis;\n        this.links = links;\n        this.options = options;\n        this.renderer = renderer || this.options.renderer || new renderer_1.Renderer(this.options);\n        if (!this.links)\n            throw new Error(\"InlineLexer requires 'links' parameter.\");\n        this.setRules();\n    }\n    /**\n     * Static Lexing/Compiling Method.\n     */\n    InlineLexer.output = function (src, links, options) {\n        var inlineLexer = new this(this, links, options);\n        return inlineLexer.output(src);\n    };\n    InlineLexer.getRulesBase = function () {\n        if (this.rulesBase)\n            return this.rulesBase;\n        /**\n         * Inline-Level Grammar.\n         */\n        var base = {\n            escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n            autolink: /^<([^ <>]+(@|:\\/)[^ <>]+)>/,\n            tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^<'\">])*?>/,\n            link: /^!?\\[(inside)\\]\\(href\\)/,\n            reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n            nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n            strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n            em: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n            code: /^(`+)([\\s\\S]*?[^`])\\1(?!`)/,\n            br: /^ {2,}\\n(?!\\s*$)/,\n            text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/,\n            _inside: /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/,\n            _href: /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/,\n        };\n        base.link = new extend_regexp_1.ExtendRegexp(base.link)\n            .setGroup('inside', base._inside)\n            .setGroup('href', base._href)\n            .getRegexp();\n        base.reflink = new extend_regexp_1.ExtendRegexp(base.reflink)\n            .setGroup('inside', base._inside)\n            .getRegexp();\n        return this.rulesBase = base;\n    };\n    InlineLexer.getRulesPedantic = function () {\n        if (this.rulesPedantic)\n            return this.rulesPedantic;\n        return this.rulesPedantic = __assign({}, this.getRulesBase(), {\n            strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n            em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n        });\n    };\n    InlineLexer.getRulesGfm = function () {\n        if (this.rulesGfm)\n            return this.rulesGfm;\n        var base = this.getRulesBase();\n        var escape = new extend_regexp_1.ExtendRegexp(base.escape)\n            .setGroup('])', '~|])')\n            .getRegexp();\n        var text = new extend_regexp_1.ExtendRegexp(base.text)\n            .setGroup(']|', '~]|')\n            .setGroup('|', '|https?://|')\n            .getRegexp();\n        return this.rulesGfm = __assign({}, base, {\n            escape: escape,\n            url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n            del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n            text: text\n        });\n    };\n    InlineLexer.getRulesBreaks = function () {\n        if (this.rulesBreaks)\n            return this.rulesBreaks;\n        var inline = this.getRulesGfm();\n        var gfm = this.getRulesGfm();\n        return this.rulesBreaks = __assign({}, gfm, {\n            br: new extend_regexp_1.ExtendRegexp(inline.br).setGroup('{2,}', '*').getRegexp(),\n            text: new extend_regexp_1.ExtendRegexp(gfm.text).setGroup('{2,}', '*').getRegexp()\n        });\n    };\n    InlineLexer.prototype.setRules = function () {\n        if (this.options.gfm) {\n            if (this.options.breaks) {\n                this.rules = this.staticThis.getRulesBreaks();\n            }\n            else {\n                this.rules = this.staticThis.getRulesGfm();\n            }\n        }\n        else if (this.options.pedantic) {\n            this.rules = this.staticThis.getRulesPedantic();\n        }\n        else {\n            this.rules = this.staticThis.getRulesBase();\n        }\n        this.hasRulesGfm = this.rules.url !== undefined;\n    };\n    /**\n     * Lexing/Compiling.\n     */\n    InlineLexer.prototype.output = function (nextPart) {\n        nextPart = nextPart;\n        var execArr;\n        var out = '';\n        while (nextPart) {\n            // escape\n            if (execArr = this.rules.escape.exec(nextPart)) {\n                nextPart = nextPart.substring(execArr[0].length);\n                out += execArr[1];\n                continue;\n            }\n            // autolink\n            if (execArr = this.rules.autolink.exec(nextPart)) {\n                var text = void 0, href = void 0;\n                nextPart = nextPart.substring(execArr[0].length);\n                if (execArr[2] === '@') {\n                    text = this.options.escape(execArr[1].charAt(6) === ':'\n                        ? this.mangle(execArr[1].substring(7))\n                        : this.mangle(execArr[1]));\n                    href = this.mangle('mailto:') + text;\n                }\n                else {\n                    text = this.options.escape(execArr[1]);\n                    href = text;\n                }\n                out += this.renderer.link(href, null, text);\n                continue;\n            }\n            // url (gfm)\n            if (!this.inLink\n                && this.hasRulesGfm\n                && (execArr = this.rules.url.exec(nextPart))) {\n                var text = void 0, href = void 0;\n                nextPart = nextPart.substring(execArr[0].length);\n                text = this.options.escape(execArr[1]);\n                href = text;\n                out += this.renderer.link(href, null, text);\n                continue;\n            }\n            // tag\n            if (execArr = this.rules.tag.exec(nextPart)) {\n                if (!this.inLink && /^<a /i.test(execArr[0])) {\n                    this.inLink = true;\n                }\n                else if (this.inLink && /^<\\/a>/i.test(execArr[0])) {\n                    this.inLink = false;\n                }\n                nextPart = nextPart.substring(execArr[0].length);\n                out += this.options.sanitize\n                    ? this.options.sanitizer\n                        ? this.options.sanitizer(execArr[0])\n                        : this.options.escape(execArr[0])\n                    : execArr[0];\n                continue;\n            }\n            // link\n            if (execArr = this.rules.link.exec(nextPart)) {\n                nextPart = nextPart.substring(execArr[0].length);\n                this.inLink = true;\n                out += this.outputLink(execArr, {\n                    href: execArr[2],\n                    title: execArr[3]\n                });\n                this.inLink = false;\n                continue;\n            }\n            // reflink, nolink\n            if ((execArr = this.rules.reflink.exec(nextPart))\n                || (execArr = this.rules.nolink.exec(nextPart))) {\n                nextPart = nextPart.substring(execArr[0].length);\n                var keyLink = (execArr[2] || execArr[1]).replace(/\\s+/g, ' ');\n                var link = this.links[keyLink.toLowerCase()];\n                if (!link || !link.href) {\n                    out += execArr[0].charAt(0);\n                    nextPart = execArr[0].substring(1) + nextPart;\n                    continue;\n                }\n                this.inLink = true;\n                out += this.outputLink(execArr, link);\n                this.inLink = false;\n                continue;\n            }\n            // strong\n            if (execArr = this.rules.strong.exec(nextPart)) {\n                nextPart = nextPart.substring(execArr[0].length);\n                out += this.renderer.strong(this.output(execArr[2] || execArr[1]));\n                continue;\n            }\n            // em\n            if (execArr = this.rules.em.exec(nextPart)) {\n                nextPart = nextPart.substring(execArr[0].length);\n                out += this.renderer.em(this.output(execArr[2] || execArr[1]));\n                continue;\n            }\n            // code\n            if (execArr = this.rules.code.exec(nextPart)) {\n                nextPart = nextPart.substring(execArr[0].length);\n                out += this.renderer.codespan(this.options.escape(execArr[2].trim(), true));\n                continue;\n            }\n            // br\n            if (execArr = this.rules.br.exec(nextPart)) {\n                nextPart = nextPart.substring(execArr[0].length);\n                out += this.renderer.br();\n                continue;\n            }\n            // del (gfm)\n            if (this.hasRulesGfm\n                && (execArr = this.rules.del.exec(nextPart))) {\n                nextPart = nextPart.substring(execArr[0].length);\n                out += this.renderer.del(this.output(execArr[1]));\n                continue;\n            }\n            // text\n            if (execArr = this.rules.text.exec(nextPart)) {\n                nextPart = nextPart.substring(execArr[0].length);\n                out += this.renderer.text(this.options.escape(this.smartypants(execArr[0])));\n                continue;\n            }\n            if (nextPart)\n                throw new Error('Infinite loop on byte: ' + nextPart.charCodeAt(0));\n        }\n        return out;\n    };\n    /**\n     * Compile Link.\n     */\n    InlineLexer.prototype.outputLink = function (execArr, link) {\n        var href = this.options.escape(link.href);\n        var title = link.title ? this.options.escape(link.title) : null;\n        return execArr[0].charAt(0) !== '!'\n            ? this.renderer.link(href, title, this.output(execArr[1]))\n            : this.renderer.image(href, title, this.options.escape(execArr[1]));\n    };\n    /**\n     * Smartypants Transformations.\n     */\n    InlineLexer.prototype.smartypants = function (text) {\n        if (!this.options.smartypants)\n            return text;\n        return text\n            .replace(/---/g, '\\u2014')\n            .replace(/--/g, '\\u2013')\n            .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n            .replace(/'/g, '\\u2019')\n            .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n            .replace(/\"/g, '\\u201d')\n            .replace(/\\.{3}/g, '\\u2026');\n    };\n    /**\n     * Mangle Links.\n     */\n    InlineLexer.prototype.mangle = function (text) {\n        if (!this.options.mangle)\n            return text;\n        var out = '', length = text.length;\n        for (var i = 0; i < length; i++) {\n            var str = void 0;\n            if (Math.random() > 0.5) {\n                str = 'x' + text.charCodeAt(i).toString(16);\n            }\n            out += '&#' + str + ';';\n        }\n        return out;\n    };\n    return InlineLexer;\n}());\nexports.InlineLexer = InlineLexer;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/marked-ts/dist/inline-lexer.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}}],"sources":{"../node_modules/marked-ts/dist/inline-lexer.js":"\"use strict\";\n/**\n * @license\n *\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n *\n * Copyright (c) 2018, Костя Третяк. (MIT Licensed)\n * https://github.com/KostyaTretyak/marked-ts\n */\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar extend_regexp_1 = require(\"./extend-regexp\");\nvar marked_1 = require(\"./marked\");\nvar renderer_1 = require(\"./renderer\");\n/**\n * Inline Lexer & Compiler.\n */\nvar InlineLexer = /** @class */ (function () {\n    function InlineLexer(staticThis, links, options, renderer) {\n        if (options === void 0) { options = marked_1.Marked.options; }\n        this.staticThis = staticThis;\n        this.links = links;\n        this.options = options;\n        this.renderer = renderer || this.options.renderer || new renderer_1.Renderer(this.options);\n        if (!this.links)\n            throw new Error(\"InlineLexer requires 'links' parameter.\");\n        this.setRules();\n    }\n    /**\n     * Static Lexing/Compiling Method.\n     */\n    InlineLexer.output = function (src, links, options) {\n        var inlineLexer = new this(this, links, options);\n        return inlineLexer.output(src);\n    };\n    InlineLexer.getRulesBase = function () {\n        if (this.rulesBase)\n            return this.rulesBase;\n        /**\n         * Inline-Level Grammar.\n         */\n        var base = {\n            escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n            autolink: /^<([^ <>]+(@|:\\/)[^ <>]+)>/,\n            tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^<'\">])*?>/,\n            link: /^!?\\[(inside)\\]\\(href\\)/,\n            reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n            nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n            strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n            em: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n            code: /^(`+)([\\s\\S]*?[^`])\\1(?!`)/,\n            br: /^ {2,}\\n(?!\\s*$)/,\n            text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/,\n            _inside: /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/,\n            _href: /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/,\n        };\n        base.link = new extend_regexp_1.ExtendRegexp(base.link)\n            .setGroup('inside', base._inside)\n            .setGroup('href', base._href)\n            .getRegexp();\n        base.reflink = new extend_regexp_1.ExtendRegexp(base.reflink)\n            .setGroup('inside', base._inside)\n            .getRegexp();\n        return this.rulesBase = base;\n    };\n    InlineLexer.getRulesPedantic = function () {\n        if (this.rulesPedantic)\n            return this.rulesPedantic;\n        return this.rulesPedantic = __assign({}, this.getRulesBase(), {\n            strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n            em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n        });\n    };\n    InlineLexer.getRulesGfm = function () {\n        if (this.rulesGfm)\n            return this.rulesGfm;\n        var base = this.getRulesBase();\n        var escape = new extend_regexp_1.ExtendRegexp(base.escape)\n            .setGroup('])', '~|])')\n            .getRegexp();\n        var text = new extend_regexp_1.ExtendRegexp(base.text)\n            .setGroup(']|', '~]|')\n            .setGroup('|', '|https?://|')\n            .getRegexp();\n        return this.rulesGfm = __assign({}, base, {\n            escape: escape,\n            url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n            del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n            text: text\n        });\n    };\n    InlineLexer.getRulesBreaks = function () {\n        if (this.rulesBreaks)\n            return this.rulesBreaks;\n        var inline = this.getRulesGfm();\n        var gfm = this.getRulesGfm();\n        return this.rulesBreaks = __assign({}, gfm, {\n            br: new extend_regexp_1.ExtendRegexp(inline.br).setGroup('{2,}', '*').getRegexp(),\n            text: new extend_regexp_1.ExtendRegexp(gfm.text).setGroup('{2,}', '*').getRegexp()\n        });\n    };\n    InlineLexer.prototype.setRules = function () {\n        if (this.options.gfm) {\n            if (this.options.breaks) {\n                this.rules = this.staticThis.getRulesBreaks();\n            }\n            else {\n                this.rules = this.staticThis.getRulesGfm();\n            }\n        }\n        else if (this.options.pedantic) {\n            this.rules = this.staticThis.getRulesPedantic();\n        }\n        else {\n            this.rules = this.staticThis.getRulesBase();\n        }\n        this.hasRulesGfm = this.rules.url !== undefined;\n    };\n    /**\n     * Lexing/Compiling.\n     */\n    InlineLexer.prototype.output = function (nextPart) {\n        nextPart = nextPart;\n        var execArr;\n        var out = '';\n        while (nextPart) {\n            // escape\n            if (execArr = this.rules.escape.exec(nextPart)) {\n                nextPart = nextPart.substring(execArr[0].length);\n                out += execArr[1];\n                continue;\n            }\n            // autolink\n            if (execArr = this.rules.autolink.exec(nextPart)) {\n                var text = void 0, href = void 0;\n                nextPart = nextPart.substring(execArr[0].length);\n                if (execArr[2] === '@') {\n                    text = this.options.escape(execArr[1].charAt(6) === ':'\n                        ? this.mangle(execArr[1].substring(7))\n                        : this.mangle(execArr[1]));\n                    href = this.mangle('mailto:') + text;\n                }\n                else {\n                    text = this.options.escape(execArr[1]);\n                    href = text;\n                }\n                out += this.renderer.link(href, null, text);\n                continue;\n            }\n            // url (gfm)\n            if (!this.inLink\n                && this.hasRulesGfm\n                && (execArr = this.rules.url.exec(nextPart))) {\n                var text = void 0, href = void 0;\n                nextPart = nextPart.substring(execArr[0].length);\n                text = this.options.escape(execArr[1]);\n                href = text;\n                out += this.renderer.link(href, null, text);\n                continue;\n            }\n            // tag\n            if (execArr = this.rules.tag.exec(nextPart)) {\n                if (!this.inLink && /^<a /i.test(execArr[0])) {\n                    this.inLink = true;\n                }\n                else if (this.inLink && /^<\\/a>/i.test(execArr[0])) {\n                    this.inLink = false;\n                }\n                nextPart = nextPart.substring(execArr[0].length);\n                out += this.options.sanitize\n                    ? this.options.sanitizer\n                        ? this.options.sanitizer(execArr[0])\n                        : this.options.escape(execArr[0])\n                    : execArr[0];\n                continue;\n            }\n            // link\n            if (execArr = this.rules.link.exec(nextPart)) {\n                nextPart = nextPart.substring(execArr[0].length);\n                this.inLink = true;\n                out += this.outputLink(execArr, {\n                    href: execArr[2],\n                    title: execArr[3]\n                });\n                this.inLink = false;\n                continue;\n            }\n            // reflink, nolink\n            if ((execArr = this.rules.reflink.exec(nextPart))\n                || (execArr = this.rules.nolink.exec(nextPart))) {\n                nextPart = nextPart.substring(execArr[0].length);\n                var keyLink = (execArr[2] || execArr[1]).replace(/\\s+/g, ' ');\n                var link = this.links[keyLink.toLowerCase()];\n                if (!link || !link.href) {\n                    out += execArr[0].charAt(0);\n                    nextPart = execArr[0].substring(1) + nextPart;\n                    continue;\n                }\n                this.inLink = true;\n                out += this.outputLink(execArr, link);\n                this.inLink = false;\n                continue;\n            }\n            // strong\n            if (execArr = this.rules.strong.exec(nextPart)) {\n                nextPart = nextPart.substring(execArr[0].length);\n                out += this.renderer.strong(this.output(execArr[2] || execArr[1]));\n                continue;\n            }\n            // em\n            if (execArr = this.rules.em.exec(nextPart)) {\n                nextPart = nextPart.substring(execArr[0].length);\n                out += this.renderer.em(this.output(execArr[2] || execArr[1]));\n                continue;\n            }\n            // code\n            if (execArr = this.rules.code.exec(nextPart)) {\n                nextPart = nextPart.substring(execArr[0].length);\n                out += this.renderer.codespan(this.options.escape(execArr[2].trim(), true));\n                continue;\n            }\n            // br\n            if (execArr = this.rules.br.exec(nextPart)) {\n                nextPart = nextPart.substring(execArr[0].length);\n                out += this.renderer.br();\n                continue;\n            }\n            // del (gfm)\n            if (this.hasRulesGfm\n                && (execArr = this.rules.del.exec(nextPart))) {\n                nextPart = nextPart.substring(execArr[0].length);\n                out += this.renderer.del(this.output(execArr[1]));\n                continue;\n            }\n            // text\n            if (execArr = this.rules.text.exec(nextPart)) {\n                nextPart = nextPart.substring(execArr[0].length);\n                out += this.renderer.text(this.options.escape(this.smartypants(execArr[0])));\n                continue;\n            }\n            if (nextPart)\n                throw new Error('Infinite loop on byte: ' + nextPart.charCodeAt(0));\n        }\n        return out;\n    };\n    /**\n     * Compile Link.\n     */\n    InlineLexer.prototype.outputLink = function (execArr, link) {\n        var href = this.options.escape(link.href);\n        var title = link.title ? this.options.escape(link.title) : null;\n        return execArr[0].charAt(0) !== '!'\n            ? this.renderer.link(href, title, this.output(execArr[1]))\n            : this.renderer.image(href, title, this.options.escape(execArr[1]));\n    };\n    /**\n     * Smartypants Transformations.\n     */\n    InlineLexer.prototype.smartypants = function (text) {\n        if (!this.options.smartypants)\n            return text;\n        return text\n            .replace(/---/g, '\\u2014')\n            .replace(/--/g, '\\u2013')\n            .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n            .replace(/'/g, '\\u2019')\n            .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n            .replace(/\"/g, '\\u201d')\n            .replace(/\\.{3}/g, '\\u2026');\n    };\n    /**\n     * Mangle Links.\n     */\n    InlineLexer.prototype.mangle = function (text) {\n        if (!this.options.mangle)\n            return text;\n        var out = '', length = text.length;\n        for (var i = 0; i < length; i++) {\n            var str = void 0;\n            if (Math.random() > 0.5) {\n                str = 'x' + text.charCodeAt(i).toString(16);\n            }\n            out += '&#' + str + ';';\n        }\n        return out;\n    };\n    return InlineLexer;\n}());\nexports.InlineLexer = InlineLexer;\n"},"lineCount":298}},"error":null,"hash":"24f397af679aa74f11954c994ab1058f","cacheData":{"env":{}}}