{"id":"../node_modules/marked-ts/dist/parser.js","dependencies":[{"name":"/home/sam/Projects/RedTeamToolkit/src/package.json","includedInParent":true,"mtime":1572423157857},{"name":"/home/sam/Projects/RedTeamToolkit/src/node_modules/marked-ts/package.json","includedInParent":true,"mtime":1572380758975},{"name":"./marked","loc":{"line":12,"column":23},"parent":"/home/sam/Projects/RedTeamToolkit/src/node_modules/marked-ts/dist/parser.js","resolved":"/home/sam/Projects/RedTeamToolkit/src/node_modules/marked-ts/dist/marked.js"},{"name":"./renderer","loc":{"line":13,"column":25},"parent":"/home/sam/Projects/RedTeamToolkit/src/node_modules/marked-ts/dist/parser.js","resolved":"/home/sam/Projects/RedTeamToolkit/src/node_modules/marked-ts/dist/renderer.js"},{"name":"./inline-lexer","loc":{"line":14,"column":29},"parent":"/home/sam/Projects/RedTeamToolkit/src/node_modules/marked-ts/dist/parser.js","resolved":"/home/sam/Projects/RedTeamToolkit/src/node_modules/marked-ts/dist/inline-lexer.js"},{"name":"./interfaces","loc":{"line":15,"column":27},"parent":"/home/sam/Projects/RedTeamToolkit/src/node_modules/marked-ts/dist/parser.js","resolved":"/home/sam/Projects/RedTeamToolkit/src/node_modules/marked-ts/dist/interfaces.js"}],"generated":{"js":"\"use strict\";\n/**\n * @license\n *\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n *\n * Copyright (c) 2018, Костя Третяк. (MIT Licensed)\n * https://github.com/KostyaTretyak/marked-ts\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar marked_1 = require(\"./marked\");\nvar renderer_1 = require(\"./renderer\");\nvar inline_lexer_1 = require(\"./inline-lexer\");\nvar interfaces_1 = require(\"./interfaces\");\n/**\n * Parsing & Compiling.\n */\nvar Parser = /** @class */ (function () {\n    function Parser(options) {\n        this.simpleRenderers = [];\n        this.line = 0;\n        this.tokens = [];\n        this.token = null;\n        this.options = options || marked_1.Marked.options;\n        this.renderer = this.options.renderer || new renderer_1.Renderer(this.options);\n    }\n    Parser.parse = function (tokens, links, options) {\n        var parser = new this(options);\n        return parser.parse(links, tokens);\n    };\n    Parser.prototype.parse = function (links, tokens) {\n        this.inlineLexer = new inline_lexer_1.InlineLexer(inline_lexer_1.InlineLexer, links, this.options, this.renderer);\n        this.tokens = tokens.reverse();\n        var out = '';\n        while (this.next()) {\n            out += this.tok();\n        }\n        return out;\n    };\n    Parser.prototype.debug = function (links, tokens) {\n        this.inlineLexer = new inline_lexer_1.InlineLexer(inline_lexer_1.InlineLexer, links, this.options, this.renderer);\n        this.tokens = tokens.reverse();\n        var out = '';\n        while (this.next()) {\n            var outToken = this.tok();\n            this.token.line = this.line += outToken.split('\\n').length - 1;\n            out += outToken;\n        }\n        return out;\n    };\n    Parser.prototype.next = function () {\n        return this.token = this.tokens.pop();\n    };\n    Parser.prototype.getNextElement = function () {\n        return this.tokens[this.tokens.length - 1];\n    };\n    Parser.prototype.parseText = function () {\n        var body = this.token.text;\n        var nextElement;\n        while ((nextElement = this.getNextElement()) && nextElement.type == interfaces_1.TokenType.text) {\n            body += '\\n' + this.next().text;\n        }\n        return this.inlineLexer.output(body);\n    };\n    Parser.prototype.tok = function () {\n        switch (this.token.type) {\n            case interfaces_1.TokenType.space:\n                {\n                    return '';\n                }\n            case interfaces_1.TokenType.paragraph:\n                {\n                    return this.renderer.paragraph(this.inlineLexer.output(this.token.text));\n                }\n            case interfaces_1.TokenType.text:\n                {\n                    if (this.options.isNoP)\n                        return this.parseText();\n                    else\n                        return this.renderer.paragraph(this.parseText());\n                }\n            case interfaces_1.TokenType.heading:\n                {\n                    return this.renderer.heading(this.inlineLexer.output(this.token.text), this.token.depth, this.token.text);\n                }\n            case interfaces_1.TokenType.listStart:\n                {\n                    var body = '', ordered = this.token.ordered;\n                    while (this.next().type != interfaces_1.TokenType.listEnd) {\n                        body += this.tok();\n                    }\n                    return this.renderer.list(body, ordered);\n                }\n            case interfaces_1.TokenType.listItemStart:\n                {\n                    var body = '';\n                    while (this.next().type != interfaces_1.TokenType.listItemEnd) {\n                        body += this.token.type == interfaces_1.TokenType.text\n                            ? this.parseText()\n                            : this.tok();\n                    }\n                    return this.renderer.listitem(body);\n                }\n            case interfaces_1.TokenType.looseItemStart:\n                {\n                    var body = '';\n                    while (this.next().type != interfaces_1.TokenType.listItemEnd) {\n                        body += this.tok();\n                    }\n                    return this.renderer.listitem(body);\n                }\n            case interfaces_1.TokenType.code:\n                {\n                    return this.renderer.code(this.token.text, this.token.lang, this.token.escaped);\n                }\n            case interfaces_1.TokenType.table:\n                {\n                    var header = '', body = '', row = void 0, cell = void 0;\n                    // header\n                    cell = '';\n                    for (var i = 0; i < this.token.header.length; i++) {\n                        var flags = { header: true, align: this.token.align[i] };\n                        var out = this.inlineLexer.output(this.token.header[i]);\n                        cell += this.renderer.tablecell(out, flags);\n                    }\n                    header += this.renderer.tablerow(cell);\n                    for (var i = 0; i < this.token.cells.length; i++) {\n                        row = this.token.cells[i];\n                        cell = '';\n                        for (var j = 0; j < row.length; j++) {\n                            cell += this.renderer.tablecell(this.inlineLexer.output(row[j]), { header: false, align: this.token.align[j] });\n                        }\n                        body += this.renderer.tablerow(cell);\n                    }\n                    return this.renderer.table(header, body);\n                }\n            case interfaces_1.TokenType.blockquoteStart:\n                {\n                    var body = '';\n                    while (this.next().type != interfaces_1.TokenType.blockquoteEnd) {\n                        body += this.tok();\n                    }\n                    return this.renderer.blockquote(body);\n                }\n            case interfaces_1.TokenType.hr:\n                {\n                    return this.renderer.hr();\n                }\n            case interfaces_1.TokenType.html:\n                {\n                    var html = !this.token.pre && !this.options.pedantic\n                        ? this.inlineLexer.output(this.token.text)\n                        : this.token.text;\n                    return this.renderer.html(html);\n                }\n            default:\n                {\n                    if (this.simpleRenderers.length)\n                        for (var i = 0; i < this.simpleRenderers.length; i++) {\n                            if (this.token.type == ('simpleRule' + (i + 1))) {\n                                return this.simpleRenderers[i].call(this.renderer, this.token.execArr);\n                            }\n                        }\n                    var errMsg = \"Token with \\\"\" + this.token.type + \"\\\" type was not found.\";\n                    if (this.options.silent) {\n                        console.log(errMsg);\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n        }\n    };\n    return Parser;\n}());\nexports.Parser = Parser;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/marked-ts/dist/parser.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}}],"sources":{"../node_modules/marked-ts/dist/parser.js":"\"use strict\";\n/**\n * @license\n *\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n *\n * Copyright (c) 2018, Костя Третяк. (MIT Licensed)\n * https://github.com/KostyaTretyak/marked-ts\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar marked_1 = require(\"./marked\");\nvar renderer_1 = require(\"./renderer\");\nvar inline_lexer_1 = require(\"./inline-lexer\");\nvar interfaces_1 = require(\"./interfaces\");\n/**\n * Parsing & Compiling.\n */\nvar Parser = /** @class */ (function () {\n    function Parser(options) {\n        this.simpleRenderers = [];\n        this.line = 0;\n        this.tokens = [];\n        this.token = null;\n        this.options = options || marked_1.Marked.options;\n        this.renderer = this.options.renderer || new renderer_1.Renderer(this.options);\n    }\n    Parser.parse = function (tokens, links, options) {\n        var parser = new this(options);\n        return parser.parse(links, tokens);\n    };\n    Parser.prototype.parse = function (links, tokens) {\n        this.inlineLexer = new inline_lexer_1.InlineLexer(inline_lexer_1.InlineLexer, links, this.options, this.renderer);\n        this.tokens = tokens.reverse();\n        var out = '';\n        while (this.next()) {\n            out += this.tok();\n        }\n        return out;\n    };\n    Parser.prototype.debug = function (links, tokens) {\n        this.inlineLexer = new inline_lexer_1.InlineLexer(inline_lexer_1.InlineLexer, links, this.options, this.renderer);\n        this.tokens = tokens.reverse();\n        var out = '';\n        while (this.next()) {\n            var outToken = this.tok();\n            this.token.line = this.line += outToken.split('\\n').length - 1;\n            out += outToken;\n        }\n        return out;\n    };\n    Parser.prototype.next = function () {\n        return this.token = this.tokens.pop();\n    };\n    Parser.prototype.getNextElement = function () {\n        return this.tokens[this.tokens.length - 1];\n    };\n    Parser.prototype.parseText = function () {\n        var body = this.token.text;\n        var nextElement;\n        while ((nextElement = this.getNextElement()) && nextElement.type == interfaces_1.TokenType.text) {\n            body += '\\n' + this.next().text;\n        }\n        return this.inlineLexer.output(body);\n    };\n    Parser.prototype.tok = function () {\n        switch (this.token.type) {\n            case interfaces_1.TokenType.space:\n                {\n                    return '';\n                }\n            case interfaces_1.TokenType.paragraph:\n                {\n                    return this.renderer.paragraph(this.inlineLexer.output(this.token.text));\n                }\n            case interfaces_1.TokenType.text:\n                {\n                    if (this.options.isNoP)\n                        return this.parseText();\n                    else\n                        return this.renderer.paragraph(this.parseText());\n                }\n            case interfaces_1.TokenType.heading:\n                {\n                    return this.renderer.heading(this.inlineLexer.output(this.token.text), this.token.depth, this.token.text);\n                }\n            case interfaces_1.TokenType.listStart:\n                {\n                    var body = '', ordered = this.token.ordered;\n                    while (this.next().type != interfaces_1.TokenType.listEnd) {\n                        body += this.tok();\n                    }\n                    return this.renderer.list(body, ordered);\n                }\n            case interfaces_1.TokenType.listItemStart:\n                {\n                    var body = '';\n                    while (this.next().type != interfaces_1.TokenType.listItemEnd) {\n                        body += this.token.type == interfaces_1.TokenType.text\n                            ? this.parseText()\n                            : this.tok();\n                    }\n                    return this.renderer.listitem(body);\n                }\n            case interfaces_1.TokenType.looseItemStart:\n                {\n                    var body = '';\n                    while (this.next().type != interfaces_1.TokenType.listItemEnd) {\n                        body += this.tok();\n                    }\n                    return this.renderer.listitem(body);\n                }\n            case interfaces_1.TokenType.code:\n                {\n                    return this.renderer.code(this.token.text, this.token.lang, this.token.escaped);\n                }\n            case interfaces_1.TokenType.table:\n                {\n                    var header = '', body = '', row = void 0, cell = void 0;\n                    // header\n                    cell = '';\n                    for (var i = 0; i < this.token.header.length; i++) {\n                        var flags = { header: true, align: this.token.align[i] };\n                        var out = this.inlineLexer.output(this.token.header[i]);\n                        cell += this.renderer.tablecell(out, flags);\n                    }\n                    header += this.renderer.tablerow(cell);\n                    for (var i = 0; i < this.token.cells.length; i++) {\n                        row = this.token.cells[i];\n                        cell = '';\n                        for (var j = 0; j < row.length; j++) {\n                            cell += this.renderer.tablecell(this.inlineLexer.output(row[j]), { header: false, align: this.token.align[j] });\n                        }\n                        body += this.renderer.tablerow(cell);\n                    }\n                    return this.renderer.table(header, body);\n                }\n            case interfaces_1.TokenType.blockquoteStart:\n                {\n                    var body = '';\n                    while (this.next().type != interfaces_1.TokenType.blockquoteEnd) {\n                        body += this.tok();\n                    }\n                    return this.renderer.blockquote(body);\n                }\n            case interfaces_1.TokenType.hr:\n                {\n                    return this.renderer.hr();\n                }\n            case interfaces_1.TokenType.html:\n                {\n                    var html = !this.token.pre && !this.options.pedantic\n                        ? this.inlineLexer.output(this.token.text)\n                        : this.token.text;\n                    return this.renderer.html(html);\n                }\n            default:\n                {\n                    if (this.simpleRenderers.length)\n                        for (var i = 0; i < this.simpleRenderers.length; i++) {\n                            if (this.token.type == ('simpleRule' + (i + 1))) {\n                                return this.simpleRenderers[i].call(this.renderer, this.token.execArr);\n                            }\n                        }\n                    var errMsg = \"Token with \\\"\" + this.token.type + \"\\\" type was not found.\";\n                    if (this.options.silent) {\n                        console.log(errMsg);\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n        }\n    };\n    return Parser;\n}());\nexports.Parser = Parser;\n"},"lineCount":178}},"error":null,"hash":"588914fc7d74b5cb1aefb18e03f89f2f","cacheData":{"env":{}}}